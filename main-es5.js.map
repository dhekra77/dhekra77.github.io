{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","userService","newUser","editedUser","users","getUsers","getUsersFromData","user","userForm","editUserForm","length","isNewUser","addUser","updateUser","deleteUser","showAddUserForm","AppModule","BrowserModule","FormsModule","UserService","blocs","type_adress","type_voie","rue","ville","numero","upersons","firstName","lastName","naissance","Blocs","push","index","findIndex","u","splice","indexOf","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAA,8BAAwB,CAACS,EAAzB,GAA8B,IAA9B;AACAC,YAAM,CAACC,OAAP,GAAiBX,wBAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqCgB;;AACE;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAkB;;AACxB;;;;;;AAJM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AArBZ;;AACE;;AAAI;;AAAa;;AACjB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AACxB;;AACE;;AACA;;AACA;;AACE;;AAAyB;;AAAc;;AACvC;;AAAwB;;AAAS;;AACjC;;AAAwB;;AAAI;;AAC5B;;AAAwB;;AAAM;;AAEhC;;AACA;;AACE;;AACA;;AAMA;;AACF;;AACF;;AAEA;;AACE;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAI;;AAE5F;;AAAoD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAM;;AACvF;;AACF;;;;;;AA/BM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAasB;;AAAA;;;;;;;;AAuB9B;;AACA;;AACW;;AACI;;AAAyB;;AAAe;;AAE5C;;AAEA;;AAEI;;AAII;;AACC;;AAAwF;AAAA;;AAAA;;AAAA;AAAA;;AAAxF;;AACD;;AAAK;;AAAoF;AAAA;;AAAA;;AAAA;AAAA;;AAApF;;AACJ;;AAAwF;AAAA;;AAAA;;AAAA;AAAA;;AAAxF;;AAEF;;AACO;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACnF;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAM;;AACjF;;AAIN;;AACL;;AAED;;;;;;AAf8F;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAsB9F;;AACE;;AACW;;AACI;;AAAyB;;AAAoB;;AAEjD;;AAEA;;AAEI;;AAII;;AACC;;AAAwF;AAAA;;AAAA;;AAAA;AAAA;;AAAxF;;AACD;;AAAK;;AAAoF;AAAA;;AAAA;;AAAA;AAAA;;AAApF;;AACJ;;AAAwF;AAAA;;AAAA;;AAAA;AAAA;;AAAxF;;AAEF;;AACO;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAM;;AAC5E;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAM;;AAC7E;;AAIN;;AACL;;AAED;;;;;;AAf8F;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UCnHvHY,a;AAUX,+BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AALpB,eAAAC,OAAA,GAAe,EAAf;AAEA,eAAAC,UAAA,GAAkB,EAAlB;AAGiD;;;;iBAQjD,oBAAW;AAET,iBAAKC,KAAL,GAAa,KAAKC,QAAL,EAAb;AACD;;;iBAED,oBAAQ;AACN,mBAAO,KAAKJ,WAAL,CAAiBK,gBAAjB,EAAP;AACD;;;iBAED,0BAAiBC,IAAjB,EAA6B;AAC3B,gBAAI,CAACA,IAAL,EAAW;AACT,mBAAKC,QAAL,GAAgB,KAAhB;AACA;AACD;;AACD,iBAAKC,YAAL,GAAoB,IAApB;AACA,iBAAKN,UAAL,GAAkBI,IAAlB;AACD;;;iBAED,2BAAkB;AAChB;AACA,gBAAI,KAAKH,KAAL,CAAWM,MAAf,EAAuB;AACrB,mBAAKR,OAAL,GAAe,EAAf;AACD;;AACD,iBAAKM,QAAL,GAAgB,IAAhB;AACA,iBAAKG,SAAL,GAAiB,IAAjB;AAED;;;iBAED,kBAASJ,IAAT,EAAqB;AACnB,gBAAI,KAAKI,SAAT,EAAoB;AAClB;AACA,mBAAKV,WAAL,CAAiBW,OAAjB,CAAyBL,IAAzB;AAGD;;AACD,iBAAKC,QAAL,GAAgB,KAAhB;AACD;;;iBAED,sBAAa;AACX,iBAAKP,WAAL,CAAiBY,UAAjB,CAA4B,KAAKV,UAAjC;AACA,iBAAKM,YAAL,GAAoB,KAApB;AACA,iBAAKN,UAAL,GAAkB,EAAlB;AACD;;;iBAED,oBAAWI,IAAX,EAAuB;AACrB,iBAAKN,WAAL,CAAiBa,UAAjB,CAA4BP,IAA5B;AACD;;;iBAED,uBAAc;AACZ,iBAAKJ,UAAL,GAAkB,EAAlB;AACA,iBAAKM,YAAL,GAAoB,KAApB;AACD;;;iBAED,yBAAgB;AACd,iBAAKP,OAAL,GAAe,EAAf;AACA,iBAAKM,QAAL,GAAgB,KAAhB;AACD;;;;;;;yBA1EUR,a,EAAY,gI;AAAA,O;;;cAAZA,a;AAAY,iC;AAAA,iB;AAAA,e;AAAA,smD;AAAA;AAAA;ADVxB;;AAKD;;AACG;;AACE;;AAA4E;;AAAS;;AAGrF;;AAAqD;AAAA,qBAAS,IAAAe,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAe;;AACrG;;AAEE;;AAEF;;AACE;;AACE;;AAEE;;AACE;;AACE;;AACE;;AAAwB;;AAAE;;AAC1B;;AAAwB;;AAAU;;AAClC;;AAAwB;;AAAS;;AACjC;;AAAwB;;AAAiB;;AACzC;;AAAwB;;AAAM;;AAC9B;;AAAwB;;AAAM;;AAChC;;AACF;;AACA;;AACE;;AAiCF;;AACF;;AAKA;;AACE;;AAsCc;;AA+BH;;AACf;;AACF;;AACF;;AAKA;;AACE;;AACA;;AAAqF;;AAAY;;AAAK;;AACvG;;;;AAxH8B;;AAAA;;AAwChB;;AAAA;;AAsCc;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEzFhBC,U;;;;;yBAAAA,U;AAAS,O;;;cAATA,U;AAAS,oBAFR,4CAAAhB,YAEQ;;;mBAHT,E;AAAE,kBALJ,CACP,uDAAAiB,aADO,EAEP,4CAAAC,WAFO,CAKI;;;;4HAGFF,U,EAAS;AAAA,yBAXlB,4CAAAhB,YAWkB;AAXN,oBAIZ,uDAAAiB,aAJY,EAKZ,4CAAAC,WALY;AAWM,S;AANP,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRFC,Y;AAmCX,gCAAc;AAAA;;AAlCR,eAAAC,KAAA,GAAiB,CAAC;AACxBvB,cAAE,EAAC,CADqB;AAExBwB,uBAAW,EAAG,KAFU;AAGxBC,qBAAS,EAAG,KAHY;AAIxBC,eAAG,EAAG,mBAJkB;AAKxBC,iBAAK,EAAG,OALgB;AAMxBC,kBAAM,EAAG;AANe,WAAD,EAQvB;AAAE5B,cAAE,EAAC,CAAL;AACEwB,uBAAW,EAAG,SADhB;AAEEC,qBAAS,EAAG,SAFd;AAGEC,eAAG,EAAG,gBAHR;AAIEC,iBAAK,EAAG,OAJV;AAKEC,kBAAM,EAAG;AALX,WARuB,CAAjB;AAeE,eAAAC,QAAA,GAAmB,CACzB;AACE7B,cAAE,EAAE,CADN;AAEE8B,qBAAS,EAAE,QAFb;AAGEC,oBAAQ,EAAE,UAHZ;AAIEC,qBAAS,EAAE,YAJb;AAKCC,iBAAK,EAAG,KAAKV;AALd,WADyB,EAQzB;AACEvB,cAAE,EAAE,CADN;AAEE8B,qBAAS,EAAE,OAFb;AAGEC,oBAAQ,EAAE,OAHZ;AAIEC,qBAAS,EAAE,YAJb;AAKAC,iBAAK,EAAG,KAAKV;AALb,WARyB,CAAnB;AAmBS;;;;iBAEjB,4BAAgB;AACd,mBAAO,KAAKM,QAAZ;AACD;;;iBAED,iBAAQnB,IAAR,EAAoB;AAClBA,gBAAI,CAACV,EAAL,GAAU,KAAK6B,QAAL,CAAchB,MAAd,GAAuB,CAAjC;AACA,iBAAKgB,QAAL,CAAcK,IAAd,CAAmBxB,IAAnB;AAED;;;iBACD,oBAAWA,IAAX,EAAuB;AACrB,gBAAMyB,KAAK,GAAG,KAAKN,QAAL,CAAcO,SAAd,CAAwB,UAAAC,CAAC;AAAA,qBAAI3B,IAAI,CAACV,EAAL,KAAYqC,CAAC,CAACrC,EAAlB;AAAA,aAAzB,CAAd;AACA,iBAAK6B,QAAL,CAAcM,KAAd,IAAuBzB,IAAvB;AACD;;;iBACD,oBAAWA,IAAX,EAAuB;AACrB,iBAAKmB,QAAL,CAAcS,MAAd,CAAqB,KAAKT,QAAL,CAAcU,OAAd,CAAsB7B,IAAtB,CAArB,EAAkD,CAAlD;AACD;;;;;;;yBApDUY,Y;AAAW,O;;;eAAXA,Y;AAAW,iBAAXA,YAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;UCLd;AACA;AACA;;;AAEO,UAAMkB,YAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,UAAI,uDAAAD,WAAA,WAAJ,EAA4B;AAC1B,uDAAAE,cAAA;AACD;;AAED,6DAAAC,eAAA,GAAyBC,eAAzB,CAAyC,6CAAAzB,SAAzC,WACS,UAAA0B,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","\n <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js\"></script>\n <script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n <!------ Include the above in your HEAD tag ---------->\n<!-- Black with white text -->\n<nav class=\"navbar navbar-dark bg-dark\">  \n   <div class=\"col-md-12 mt-4\"> \n     <h1 class=\"text-center\"  style=\"text-align:center\" style=\"color:aliceblue\" >User List</h1>\n     \n    \n     <button class=\"btn btn-outline-success my-2 my-sm-0\" (click)=\"showAddUserForm()\">Add New contact</button>\n</div>\n   \n  </nav>\n \n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 mt-4\">\n  \n      <table class=\"table table-bordered table-striped table-hover\">\n        <thead>\n          <tr>\n            <th class=\"text-center\">ID</th>\n            <th class=\"text-center\">First Name</th>\n            <th class=\"text-center\">Last Name</th>\n            <th class=\"text-center\">Date de naissance</th>\n            <th class=\"text-center\">&nbsp;</th>\n            <th class=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\">\n            <td>{{ user.id }}</td>\n            <td>{{ user.firstName }}</td>\n            <td>{{ user.lastName }}</td>\n            <td>{{ user.naissance }}</td>\n            <td>\n              <table class=\"table table-bordered table-striped table-hover\" border=\"6px\" style=\"background-color:beige\" >\n              <thead>\n              <tr>  \n                <th class=\"text-center\" >type d adresse</th>\n                <th class=\"text-center\">type_voie</th>\n                <th class=\"text-center\">rue </th>\n                <th class=\"text-center\">numero</th>\n                \n              </tr>\n              </thead>\n                <tbody>\n                <tr *ngFor=\"let blogs of user.Blocs\">\n                  <td>{{ blogs.type_adress }}</td>\n                  <td>{{ blogs.type_voie }}</td>\n                  <td>{{ blogs.rue }}</td>\n                  <td>{{ blogs.numero }}</td>\n                </tr>\n                </tbody>\n              </table>\n            </td>\n\n            <td>\n              <button type=\"button\" class=\"btn btn-info btn-sm mr-2\" (click)=\"showEditUserForm(user)\">Edit</button>\n\n              <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeUser(user)\">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    \n\n\n\n      <div id=\"loginbox\" style=\"margin-top:50px;\" class=\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">                    \n        <form *ngIf=\"userForm\">  \n        <div class=\"panel panel-info\" >\n                   <div class=\"panel-heading\">\n                       <div class=\"panel-title\">Add New contact</div>\n                      \n                   </div>     \n\n                   <div style=\"padding-top:30px\" class=\"panel-body\" >\n\n                       <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n                           \n                      \n                                   \n                           <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                            <input type=\"text\" class=\"form-control mb-0\"  placeholder=\"First Name\" name=\"firstName\" [(ngModel)]=\"newUser.firstName\" />\n                           <br> <input type=\"text\" class=\"form-control mb-0\" placeholder=\"lastName\" name=\"lastName\" [(ngModel)]=\"newUser.lastName\" />\n                            <input type=\"text\"  class=\"form-control mb-0\"  placeholder=\"naissance\" name=\"naissance\" [(ngModel)]=\"newUser.naissance\" />  \n                          \n                          </div>\n                                 <p>\n                                   <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"saveUser(newUser)\">Submit</button>\n                                     <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\n                                  </p>\n                           \n\n\n                            </div>\n                       </div>   \n                       \n                      </form>  \n                      \n                      \n\n\n\n\n\n\n                      <form *ngIf=\"editUserForm\">  \n                        <div class=\"panel panel-info\" >\n                                   <div class=\"panel-heading\">\n                                       <div class=\"panel-title\">Edit contact Details</div>\n                                      \n                                   </div>     \n                \n                                   <div style=\"padding-top:30px\" class=\"panel-body\" >\n                \n                                       <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n                                           \n                                      \n                                                   \n                                           <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                            <input type=\"text\" class=\"form-control mb-0\"  placeholder=\"First Name\" name=\"firstName\" [(ngModel)]=\"editedUser.firstName\" />\n                                           <br> <input type=\"text\" class=\"form-control mb-0\" placeholder=\"lastName\" name=\"lastName\" [(ngModel)]=\"editedUser.lastName\" />\n                                            <input type=\"text\"  class=\"form-control mb-0\"  placeholder=\"naissance\" name=\"naissance\" [(ngModel)]=\"editedUser.naissance\" />  \n                                          \n                                          </div>\n                                                 <p>\n                                                   <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"updateUser\">Submit</button>\n                                                     <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelEdits\">Cancel</button>\n                                                  </p>\n                                           \n                \n                \n                                            </div>\n                                       </div>   \n                                       \n                                      </form>  \n\n                   </div>  \n    </div>\n  </div>\n</div>\n\n      \n\n     <!-- NavBar -->\n<nav class=\"navbar navbar-dark bg-dark\">  \n  <div class=\"col-md-12 mt-4\"> \n  <h5 class=\"text-center\"  style=\"text-align:center\" style=\"color:rgb(124, 131, 138)\" >Test Angular</h5></div>\n </nav>\n\n \n","import { Component, OnInit } from '@angular/core';\nimport { Blocs } from './models/blocs';\nimport { User } from './models/user';\nimport { UserService } from './services/user.service';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  users: User[];\n  userForm: boolean;\n  isNewUser: boolean;\n  newUser: any = {};\n  editUserForm: boolean;\n  editedUser: any = {};\n\n  \n  constructor(private userService: UserService) { }\n\n\n\n \n  \n\n\n  ngOnInit() {\n   \n    this.users = this.getUsers();\n  }\n\n  getUsers(): User[] {\n    return this.userService.getUsersFromData();\n  }\n\n  showEditUserForm(user: User) {\n    if (!user) {\n      this.userForm = false;\n      return;\n    }\n    this.editUserForm = true;\n    this.editedUser = user;\n  }\n\n  showAddUserForm() {\n    // resets form if edited user\n    if (this.users.length) {\n      this.newUser = {};\n    }\n    this.userForm = true;\n    this.isNewUser = true;\n\n  }\n\n  saveUser(user: User) {\n    if (this.isNewUser) {\n      // add a new user\n      this.userService.addUser(user);\n   \n     \n    }\n    this.userForm = false;\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.editedUser);\n    this.editUserForm = false;\n    this.editedUser = {};\n  }\n\n  removeUser(user: User) {\n    this.userService.deleteUser(user);\n  }\n\n  cancelEdits() {\n    this.editedUser = {};\n    this.editUserForm = false;\n  }\n\n  cancelNewUser() {\n    this.newUser = {};\n    this.userForm = false;\n  }\n\n\n\n  \n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent    \n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport {Blocs} from '../models/blocs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\nprivate blocs: Blocs[] = [{\n  id:1,\n  type_adress : 'CFM',\n  type_voie : 'CFM',\n  rue : 'Rue de Université',\n  ville : 'paris',\n  numero : '123456'\n},\n  { id:2,\n    type_adress : 'bonjour',\n    type_voie : 'bonsoir',\n    rue : 'rue de la paix',\n    ville : 'paris',\n    numero : '3899799'}\n];\n  private upersons: User[] = [\n    {\n      id: 1,\n      firstName: 'Dhekra',\n      lastName: 'Hasnaoui',\n      naissance: '07/01/1997',\n     Blocs : this.blocs\n    },\n    {\n      id: 2,\n      firstName: 'Maman',\n      lastName: 'Maman',\n      naissance: '07/01/1997',\n    Blocs : this.blocs\n\n\n    }\n  ];\n\n  constructor() { }\n\n  getUsersFromData(): User[] {\n    return this.upersons;\n  }\n\n  addUser(user: User) {\n    user.id = this.upersons.length + 1;\n    this.upersons.push(user);\n\n  }\n  updateUser(user: User) {\n    const index = this.upersons.findIndex(u => user.id === u.id);\n    this.upersons[index] = user;\n  }\n  deleteUser(user: User) {\n    this.upersons.splice(this.upersons.indexOf(user), 1);\n  }\n\n\n\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}