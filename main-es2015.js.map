{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","\n <link href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n <script src=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js\"></script>\n <script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n <!------ Include the above in your HEAD tag ---------->\n<!-- Black with white text -->\n<nav class=\"navbar navbar-dark bg-dark\">  \n   <div class=\"col-md-12 mt-4\"> \n     <h1 class=\"text-center\"  style=\"text-align:center\" style=\"color:aliceblue\" >User List</h1>\n     \n    \n     <button class=\"btn btn-outline-success my-2 my-sm-0\" (click)=\"showAddUserForm()\">Add New contact</button>\n</div>\n   \n  </nav>\n \n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 mt-4\">\n  \n      <table class=\"table table-bordered table-striped table-hover\">\n        <thead>\n          <tr>\n            <th class=\"text-center\">ID</th>\n            <th class=\"text-center\">First Name</th>\n            <th class=\"text-center\">Last Name</th>\n            <th class=\"text-center\">Date de naissance</th>\n            <th class=\"text-center\">&nbsp;</th>\n            <th class=\"text-center\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\">\n            <td>{{ user.id }}</td>\n            <td>{{ user.firstName }}</td>\n            <td>{{ user.lastName }}</td>\n            <td>{{ user.naissance }}</td>\n            <td>\n              <table class=\"table table-bordered table-striped table-hover\" border=\"6px\" style=\"background-color:beige\" >\n              <thead>\n              <tr>  \n                <th class=\"text-center\" >type d adresse</th>\n                <th class=\"text-center\">type_voie</th>\n                <th class=\"text-center\">rue </th>\n                <th class=\"text-center\">numero</th>\n                \n              </tr>\n              </thead>\n                <tbody>\n                <tr *ngFor=\"let blogs of user.Blocs\">\n                  <td>{{ blogs.type_adress }}</td>\n                  <td>{{ blogs.type_voie }}</td>\n                  <td>{{ blogs.rue }}</td>\n                  <td>{{ blogs.numero }}</td>\n                </tr>\n                </tbody>\n              </table>\n            </td>\n\n            <td>\n              <button type=\"button\" class=\"btn btn-info btn-sm mr-2\" (click)=\"showEditUserForm(user)\">Edit</button>\n\n              <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"removeUser(user)\">Delete</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    \n\n\n\n      <div id=\"loginbox\" style=\"margin-top:50px;\" class=\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">                    \n        <form *ngIf=\"userForm\">  \n        <div class=\"panel panel-info\" >\n                   <div class=\"panel-heading\">\n                       <div class=\"panel-title\">Add New contact</div>\n                      \n                   </div>     \n\n                   <div style=\"padding-top:30px\" class=\"panel-body\" >\n\n                       <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n                           \n                      \n                                   \n                           <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                            <input type=\"text\" class=\"form-control mb-0\"  placeholder=\"First Name\" name=\"firstName\" [(ngModel)]=\"newUser.firstName\" />\n                           <br> <input type=\"text\" class=\"form-control mb-0\" placeholder=\"lastName\" name=\"lastName\" [(ngModel)]=\"newUser.lastName\" />\n                            <input type=\"text\"  class=\"form-control mb-0\"  placeholder=\"naissance\" name=\"naissance\" [(ngModel)]=\"newUser.naissance\" />  \n                          \n                          </div>\n                                 <p>\n                                   <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"saveUser(newUser)\">Submit</button>\n                                     <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelNewUser()\">Cancel</button>\n                                  </p>\n                           \n\n\n                            </div>\n                       </div>   \n                       \n                      </form>  \n                      \n                      \n\n\n\n\n\n\n                      <form *ngIf=\"editUserForm\">  \n                        <div class=\"panel panel-info\" >\n                                   <div class=\"panel-heading\">\n                                       <div class=\"panel-title\">Edit contact Details</div>\n                                      \n                                   </div>     \n                \n                                   <div style=\"padding-top:30px\" class=\"panel-body\" >\n                \n                                       <div style=\"display:none\" id=\"login-alert\" class=\"alert alert-danger col-sm-12\"></div>\n                                           \n                                      \n                                                   \n                                           <div style=\"margin-bottom: 25px\" class=\"input-group\">\n                                            <input type=\"text\" class=\"form-control mb-0\"  placeholder=\"First Name\" name=\"firstName\" [(ngModel)]=\"editedUser.firstName\" />\n                                           <br> <input type=\"text\" class=\"form-control mb-0\" placeholder=\"lastName\" name=\"lastName\" [(ngModel)]=\"editedUser.lastName\" />\n                                            <input type=\"text\"  class=\"form-control mb-0\"  placeholder=\"naissance\" name=\"naissance\" [(ngModel)]=\"editedUser.naissance\" />  \n                                          \n                                          </div>\n                                                 <p>\n                                                   <button type=\"button\" class=\"btn btn-primary mr-2\" (click)=\"updateUser\">Submit</button>\n                                                     <button type=\"button\" class=\"btn btn-warning\" (click)=\"cancelEdits\">Cancel</button>\n                                                  </p>\n                                           \n                \n                \n                                            </div>\n                                       </div>   \n                                       \n                                      </form>  \n\n                   </div>  \n    </div>\n  </div>\n</div>\n\n      \n\n     <!-- NavBar -->\n<nav class=\"navbar navbar-dark bg-dark\">  \n  <div class=\"col-md-12 mt-4\"> \n  <h5 class=\"text-center\"  style=\"text-align:center\" style=\"color:rgb(124, 131, 138)\" >Test Angular</h5></div>\n </nav>\n\n \n","import { Component, OnInit } from '@angular/core';\nimport { Blocs } from './models/blocs';\nimport { User } from './models/user';\nimport { UserService } from './services/user.service';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  users: User[];\n  userForm: boolean;\n  isNewUser: boolean;\n  newUser: any = {};\n  editUserForm: boolean;\n  editedUser: any = {};\n\n  \n  constructor(private userService: UserService) { }\n\n\n\n \n  \n\n\n  ngOnInit() {\n   \n    this.users = this.getUsers();\n  }\n\n  getUsers(): User[] {\n    return this.userService.getUsersFromData();\n  }\n\n  showEditUserForm(user: User) {\n    if (!user) {\n      this.userForm = false;\n      return;\n    }\n    this.editUserForm = true;\n    this.editedUser = user;\n  }\n\n  showAddUserForm() {\n    // resets form if edited user\n    if (this.users.length) {\n      this.newUser = {};\n    }\n    this.userForm = true;\n    this.isNewUser = true;\n\n  }\n\n  saveUser(user: User) {\n    if (this.isNewUser) {\n      // add a new user\n      this.userService.addUser(user);\n   \n     \n    }\n    this.userForm = false;\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.editedUser);\n    this.editUserForm = false;\n    this.editedUser = {};\n  }\n\n  removeUser(user: User) {\n    this.userService.deleteUser(user);\n  }\n\n  cancelEdits() {\n    this.editedUser = {};\n    this.editUserForm = false;\n  }\n\n  cancelNewUser() {\n    this.newUser = {};\n    this.userForm = false;\n  }\n\n\n\n  \n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent    \n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport {Blocs} from '../models/blocs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\nprivate blocs: Blocs[] = [{\n  id:1,\n  type_adress : 'CFM',\n  type_voie : 'CFM',\n  rue : 'Rue de Université',\n  ville : 'paris',\n  numero : '123456'\n},\n  { id:2,\n    type_adress : 'bonjour',\n    type_voie : 'bonsoir',\n    rue : 'rue de la paix',\n    ville : 'paris',\n    numero : '3899799'}\n];\n  private upersons: User[] = [\n    {\n      id: 1,\n      firstName: 'Dhekra',\n      lastName: 'Hasnaoui',\n      naissance: '07/01/1997',\n     Blocs : this.blocs\n    },\n    {\n      id: 2,\n      firstName: 'Maman',\n      lastName: 'Maman',\n      naissance: '07/01/1997',\n    Blocs : this.blocs\n\n\n    }\n  ];\n\n  constructor() { }\n\n  getUsersFromData(): User[] {\n    return this.upersons;\n  }\n\n  addUser(user: User) {\n    user.id = this.upersons.length + 1;\n    this.upersons.push(user);\n\n  }\n  updateUser(user: User) {\n    const index = this.upersons.findIndex(u => user.id === u.id);\n    this.upersons[index] = user;\n  }\n  deleteUser(user: User) {\n    this.upersons.splice(this.upersons.indexOf(user), 1);\n  }\n\n\n\n\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}